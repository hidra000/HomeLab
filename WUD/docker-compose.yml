services:
  wud:
    image: getwud/wud:8.1.1
    container_name: wud
    ports:
      - "3001:3000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /mnt/Docker/WUD/config:/etc/wud/config:ro  # Optioneel: voor aangepaste configuratiebestanden
      - /mnt/Docker/WUD/Store:/store       
      
    environment:
      # Auth (optioneel, maar aanbevolen)
      # - WUD_AUTH_BASIC_USER=${WUD_USERNAME}
      # - WUD_AUTH_BASIC_HASH=${WUD_PASSWORD_HASH}

      # Watcher instellingen
      - WUD_WATCHER_LOCAL_CRON=0 1 * * * # Controleer dagelijks om 01:00 uur
      - WUD_WATCHER_LOCAL_WATCHALL=true       # Controleer ALLE containers op deze host (inclusief Awesome-Arr)
      - TZ=Europe/Amsterdam
      
      # Trigger instellingen
      - WUD_TRIGGER_DOCKER_CONTAINER_LABELS=true # Lees de labels in je Awesome-Arr stack
      - WUD_TRIGGER_DOCKER_LOCAL_AUTO=false      # Zet deze op FALSE, zodat WUD updates alleen meldt via MQTT/WebUI. Dit is veiliger dan autom. updates over verschillende compose-bestanden.
      - WUD_TRIGGER_DOCKER_LOCAL_PRUNE=true      # Ruim oude images na een update op

      # MQTT (Je huidige, prima configuratie)
      - WUD_TRIGGER_ENABLED=mqtt
      - WUD_TRIGGER_MQTT_MOSQUITTO_URL=mqtt://192.168.110.10:1883
      - WUD_TRIGGER_MQTT_HASS_ENABLED=true
      - WUD_TRIGGER_MQTT_HASS_DISCOVERY=true
      - WUD_TRIGGER_MQTT_MOSQUITTO_CLIENTID=wud
      - WUD_TRIGGER_MQTT_MOSQUITTO_USER=wud
      - WUD_TRIGGER_MQTT_MOSQUITTO_PASSWORD=MYPASSWORD 



    healthcheck:
      test: curl --fail http://localhost:${WUD_SERVER_PORT:-3000}/health || exit 1
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 10s

    labels:
      - 'wud.tag.include=^\d+\.\d+\.\d+$$'
      - 'wud.link.template=https://github.com/getwud/wud/releases/tag/$${major}.$${minor}.$${patch}'

    restart: always

