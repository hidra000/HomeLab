name: Awesome-Arr
services:
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=${SONARR_UID}
      - PGID=${MEDIACENTER_GID}
      - UMASK=002
      - TZ=${TIMEZONE}
    volumes:
      - ${ROOT_DIR}/config/sonarr-config:/config
      - ${DATA_DIR}/data:/data
      - ${DATA_DIR}/usenet:/data/usenet
      - ${SERIES_DIR}/:/data/Series         
    ports:
      - "8989:8989"
    restart: unless-stopped
    labels:
      - 'wud.tag.include=^\d+\.\d+\.\d+$$'

  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    environment:
      - PUID=${RADARR_UID}
      - PGID=${MEDIACENTER_GID}
      - UMASK=002
      - TZ=${TIMEZONE}
    volumes:
      - ${ROOT_DIR}/config/radarr-config:/config
      - ${DATA_DIR}/data:/data
      - ${DATA_DIR}/usenet:/data/usenet      
      - ${FILMS_DIR}/:/data/Films
    ports:
      - "7878:7878"
    restart: unless-stopped
    labels:
      - 'wud.tag.include=^\d+\.\d+\.\d+$$'

  lidarr:
    image: lscr.io/linuxserver/lidarr:latest
    container_name: lidarr
    environment:
      - PUID=${LIDARR_UID}
      - PGID=${MEDIACENTER_GID}
      - UMASK=002
      - TZ=${TIMEZONE}
    volumes:
      - ${ROOT_DIR}/config/lidarr-config:/config
      - ${DATA_DIR}/usenet:/data/usenet      
      - ${DATA_DIR}/data:/data
    ports:
      - "8686:8686"
    restart: unless-stopped
    labels:
      - 'wud.tag.include=^\d+\.\d+\.\d+$$'

#  readarr:
#    image: lscr.io/linuxserver/readarr:develop
#    container_name: readarr
#    environment:
#      - PUID=${READARR_UID}
#      - PGID=${MEDIACENTER_GID}
#      - UMASK=002
#      - TZ=${TIMEZONE}
#    volumes:
#      - ${ROOT_DIR}/config/readarr-config:/config
#      - ${DATA_DIR}/data:/data
#    ports:
#      - "8787:8787"
#    restart: unless-stopped

  mylar3:
    image: lscr.io/linuxserver/mylar3:latest
    container_name: mylar3
    environment:
      - PUID=${MYLAR_UID}
      - PGID=${MEDIACENTER_GID}
      - UMASK=002
    volumes:
      - ${ROOT_DIR}/config/mylar-config:/config
      - ${DATA_DIR}/usenet:/data/usenet      
      - ${DATA_DIR}/data:/data
    ports:
      - "8090:8090"
    restart: unless-stopped
    labels:
      - 'wud.tag.include=^\d+\.\d+\.\d+$$'

  audiobookshelf:
    image: ghcr.io/advplyr/audiobookshelf:latest
    container_name: audiobookshelf
    environment:
      - user=${AUDIOBOOKSHELF_UID}:${MEDIACENTER_GID}
      - TZ=${TIMEZONE}
    volumes:
      - ${ROOT_DIR}/config/audiobookshelf:/config
      - ${DATA_DIR}/data/media/audiobooks:/audiobooks
      - ${DATA_DIR}/data/media/podcasts:/podcasts
      - ${DATA_DIR}/data/media/audiobookshelf-metadata:/metadata
      - ${DATA_DIR}/usenet:/data/usenet      
    ports:
      - "13378:80"
    restart: unless-stopped
    labels:
      - 'wud.tag.include=^\d+\.\d+\.\d+$$'

  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    environment:
      - PUID=${BAZARR_UID}
      - PGID=${MEDIACENTER_GID}
      - TZ=${TIMEZONE}
    volumes:
      - ${ROOT_DIR}/config/bazarr-config:/config
      - ${DATA_DIR}/data/media:/media
      - ${DATA_DIR}/usenet:/data/usenet     
      - ${FILMS_DIR}/:/data/Films    
      - ${SERIES_DIR}/:/data/Series           
    ports:
      - "6767:6767"
    restart: unless-stopped
    labels:
      - 'wud.tag.include=^\d+\.\d+\.\d+$$'

  overseerr:
    image: sctx/overseerr:develop
    container_name: overseerr
    environment:
      - PUID=${OVERSEERR_UID}
      - PGID=${MEDIACENTER_GID}
      - UMASK=002
      - TZ=${TIMEZONE}
    volumes:
      - ${ROOT_DIR}/config/overseerr-config:/app/config
    ports:
      - "5055:5055"
    restart: unless-stopped
    labels:
      - 'wud.tag.include=^\d+\.\d+\.\d+$$'

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:develop
    container_name: prowlarr
    environment:
      - PUID=${PROWLARR_UID}
      - PGID=${MEDIACENTER_GID}
      - UMASK=002
      - TZ=${TIMEZONE}
    volumes:
      - ${ROOT_DIR}/config/prowlarr-config:/config
    ports:
      - "9696:9696"
    restart: unless-stopped
    labels:
      - 'wud.tag.include=^\d+\.\d+\.\d+$$'

  jackett:
    image: lscr.io/linuxserver/jackett:latest
    container_name: jackett
    environment:
      - PUID=${JACKETT_UID}
      - PGID=${MEDIACENTER_GID}
      - UMASK=002
      - TZ=${TIMEZONE}    
    volumes:
      - ${ROOT_DIR}/config/jackett-config:/config
    ports:
      - 9117:9117
    restart: unless-stopped
    labels:
      - 'wud.tag.include=^\d+\.\d+\.\d+$$'

  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_HTML=${LOG_HTML:-false}
      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
      - TZ=${TIMEZONE}
    ports:
      - "8191:8191"
    restart: unless-stopped
    labels:
      - 'wud.tag.include=^\d+\.\d+\.\d+$$'

#  jellyfin:
#    image: lscr.io/linuxserver/jellyfin:latest
#    container_name: jellyfin
#    environment:
#      - PUID=${UID}
#      - PGID=${MEDIACENTER_GID}
#      - UMASK=002
#      - TZ=${TIMEZONE}
#    volumes:
###      - ${ROOT_DIR}/config/jellyfin-config:/config
#      - ${DATA_DIR}/data/media:/data
#      - ${FILMS_DIR}/Films:/films
#      - ${SERIES_DIR}/Series:/series
#      - ${MUZIEK_DIR}/Muziek:/music
#    ports:
#      - "8096:8096"
#    restart: unless-stopped

  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    environment:
      - PUID=${QBITTORRENT_UID}
      - PGID=${MEDIACENTER_GID}
      - UMASK=002
      - TZ=${TIMEZONE}
      - WEBUI_PORT=8080
    volumes:
      - ${ROOT_DIR}/config/qbittorrent-config:/config
      - ${DATA_DIR}/torrents:/data/torrents
    ports:
      - "8080:8080"
      - "6881:6881"
      - "6881:6881/udp"
    restart: unless-stopped
    labels:
      - 'wud.tag.include=^\d+\.\d+\.\d+$$'

  sabnzbd:
    image: lscr.io/linuxserver/sabnzbd:latest
    container_name: sabnzbd
    environment:
      - PUID=${SABNZBD_UID}
      - PGID=${MEDIACENTER_GID}
      - UMASK=002
      - TZ=${TIMEZONE}
    volumes:
      - ${ROOT_DIR}/config/sabnzbd-config:/config
      - ${DATA_DIR}/usenet:/data/usenet
      - ${FILMS_DIR}/:/data/Films
      - ${SERIES_DIR}/:/data/Series
    ports:
      - "8081:8080"
    restart: unless-stopped
    labels:
      - 'wud.tag.include=^\d+\.\d+\.\d+$$'

  profilarr:
    image: santiagosayshey/profilarr:latest # or :beta
    container_name: profilarr
    ports:
      - "6868:6868"
    volumes:
      - ${ROOT_DIR}/config/profilarr-config:/config
    environment:
      - PUID=1000 # Set to your user ID
      - PGID=1000 # Set to your group ID
      - UMASK=022 # Optional, defaults to 022
      - TZ=${TIMEZONE}
    restart: unless-stopped      
    labels:
      - 'wud.tag.include=^\d+\.\d+\.\d+$$'

  tautulli:
    image: ghcr.io/tautulli/tautulli
    container_name: tautulli
    restart: unless-stopped
    volumes:
      - ${ROOT_DIR}/config/tautulli-config:/config
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIMEZONE}
    ports:
      - 8181:8181    
    labels:
      - 'wud.tag.include=^\d+\.\d+\.\d+$$'

  homepage:
    image: ghcr.io/gethomepage/homepage:latest
    container_name: homepage
    ports:
      - 3000:3000
    environment:
      HOMEPAGE_ALLOWED_HOSTS: "*"  # required, may need port. See gethomepage.dev/installation/#homepage_allowed_hosts
      PUID: 1000 # optional, your user id
      PGID: 1000 # optional, your group id
    volumes:
      - /mnt/Docker/Homepage/config:/app/config # Make sure your local config directory exists
      - /var/run/docker.sock:/var/run/docker.sock:ro # optional, for docker integrations
    restart: unless-stopped       
    labels:
      - 'wud.tag.include=^\d+\.\d+\.\d+$$'

  dockerproxy:
    image: ghcr.io/tecnativa/docker-socket-proxy:latest
    container_name: dockerproxy
    environment:
      - CONTAINERS=1 # Allow access to viewing containers
      - SERVICES=1 # Allow access to viewing services (necessary when using Docker Swarm)
      - TASKS=1 # Allow access to viewing tasks (necessary when using Docker Swarm)
      - POST=0 # Disallow any POST operations (effectively read-only)
    ports:
      - 127.0.0.1:2375:2375
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro # Mounted as read-only
    restart: unless-stopped
    labels:
      - 'wud.tag.include=^\d+\.\d+\.\d+$$'    